/**
* Media min query mixin
* @param {string} $min-width - The minimum width of the media query
*/
@mixin media($min-width) {
    @media (min-width: $min-width) {
        @content;
    }
}

/**
* Media max query mixin
* @param {string} $max-width - The maximum width of the media query
*/
@mixin max-media($max-width) {
    @media (max-width: calc($max-width - 1px)) {
        @content;
    }
}

/**
 * Flexbox mixin
 * @param {string} $direction - The direction of the flexbox container
 * @param {string} $justify - The justify-content property of the flexbox container
 * @param {string} $align - The align-items property of the flexbox container
 * @param {string} $wrap - The flex-wrap property of the flexbox container
 */
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
    flex-wrap: $wrap;
}

/**
 * Box shadow mixin
 * @param {string} $shadow - The shadow value
 */
@mixin transition($property: all, $duration: 0.2s, $ease: ease-in-out) {
    transition: $property $duration $ease;
}
